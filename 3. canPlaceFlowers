# You have a long flowerbed in which some of the plots are planted, and some are not. 
# However, flowers cannot be planted in adjacent plots.
# Given an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, 
# and an integer n, return true if n new flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule and false otherwise.

class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:

        # you go through each flower in plot
        # first check if left and right flower is 0, then place the flower and reduce n
        # and start the process again

        # otherwise, keep looping

        for i in range(len(flowerbed)):
            left = i == 0 or flowerbed[i-0] == 0 # considering both edge case and normal middle case
            right = i == len(flowerbed) - 1 or flowerbed[i+1] == 0 # considering both edge case and normal case

            if left and right and flowerbed[i] == 0:  # check if [0, 0, 0] --> [0, 1, 0]
                n -= 1. # reduce the flowers, then iterate again

        return n <=0 # return true or false condition if there is some flowers leftout or not

    



